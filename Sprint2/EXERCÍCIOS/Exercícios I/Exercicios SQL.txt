E1
"Apresente a query para listar todos os livros publicados após 2014. Ordenar pela coluna cod, em ordem crescente, as linhas.  Atenção às colunas esperadas no resultado final: cod, titulo, autor, editora, valor, publicacao, edicao, idioma"

SELECT *
from livro 
WHERE publicacao > '2014-12-31'
ORDER by cod 

E2
"Apresente a query para listar os 10 livros mais caros. Ordenar as linhas pela coluna valor, em ordem decrescente.  Atenção às colunas esperadas no resultado final:  titulo, valor."

SELECT titulo, valor
from livro 
ORDER by valor DESC
LIMIT 10

E3
"Apresente a query para listar as 5 editoras com mais livros na biblioteca. O resultado deve conter apenas as colunas quantidade, nome, estado e cidade. Ordenar as linhas pela coluna que representa a quantidade de livros em ordem decrescente."

select 
    count(cod) as quantidade, 
    editora.nome,
    endereco.estado,
    endereco.cidade
from livro
left join editora
    on livro.editora = editora.codEditora
left join endereco
    on editora.endereco = endereco.codEndereco
group by nome
order by quantidade desc

E4
"Apresente a query para listar a quantidade de livros publicada por cada autor. Ordenar as linhas pela coluna nome (autor), em ordem crescente. Além desta, apresentar as colunas codautor, nascimento e quantidade (total de livros de sua autoria)."

SELECT
    autor.nome AS 'nome',
    autor.codautor,
    autor.nascimento,
    COUNT(livro.autor) AS 'quantidade'
FROM
    autor
LEFT JOIN
    livro ON autor.codautor = livro.autor
GROUP BY
    autor.nome, autor.codautor, autor.nascimento
ORDER BY
autor.nome

E5
"Apresente a query para listar o nome dos autores que publicaram livros através de editoras NÃO situadas na região sul do Brasil. Ordene o resultado pela coluna nome, em ordem crescente. Não podem haver nomes repetidos em seu retorno."

SELECT DISTINCT(autor.nome) as nome
FROM autor

join livro on livro.autor = autor.codautor
join editora on editora.codeditora= livro.editora
JOIN endereco on editora.endereco= endereco.codendereco
WHERE endereco.estado NOT IN('RIO GRANDE SO SUL','SANTA CATARINA','PARANÁ')

ORDER BY (autor.nome)

E6
"Apresente a query para listar o autor com maior número de livros publicados. O resultado deve conter apenas as colunas codautor, nome, quantidade_publicacoes."

SELECT
    autor.codautor,
    autor.nome AS 'nome',
    COUNT(livro.autor) AS 'quantidade_publicacoes'
FROM
    autor
LEFT JOIN
    livro ON autor.codautor = livro.autor
GROUP BY
    autor.nome,
    autor.codautor
ORDER BY
quantidade_publicacoes DESC
limit 1

E7
"Apresente a query para listar o nome dos autores com nenhuma publicação. Apresentá-los em ordem crescente."

SELECT
    autor.nome AS 'nome'
FROM
    autor
LEFT JOIN
    livro ON autor.codautor = livro.autor
GROUP BY
    autor.nome
HAVING
    COUNT(livro.autor) = 0
ORDER BY
    autor.nome

E8
"Apresente a query para listar o código e o nome do vendedor com maior número de vendas (contagem), e que estas vendas estejam com o status concluída.  As colunas presentes no resultado devem ser, portanto, cdvdd e nmvdd."

SELECT
    tbvendas.cdvdd,
  	tbvendedor.nmvdd
FROM tbvendedor
JOIN tbvendas
ON tbvendedor.cdvdd = tbvendas.cdvdd
WHERE
        tbvendas.status = 'Concluído'
GROUP BY
        tbvendas.cdvdd,
        tbvendedor.nmvdd
ORDER BY
        COUNT(tbvendas.cdven)DESC
    LIMIT 1

E9
"Apresente a query para listar o código e nome do produto mais vendido entre as datas de 2014-02-03 até 2018-02-02, e que estas vendas estejam com o status concluída. As colunas presentes no resultado devem ser cdpro e nmpro."

SELECT
    tbestoqueproduto.cdpro,
    tbvendas.nmpro
FROM tbestoqueproduto
JOIN tbvendas ON tbestoqueproduto.cdpro = tbvendas.cdpro
WHERE tbvendas.status = 'Concluído'
    AND tbvendas.dtven BETWEEN '2014-02-03' AND '2018-02-02'
GROUP BY
    tbvendas.cdpro,
    tbvendas.nmpro
ORDER BY
    COUNT(tbvendas.cdven) DESC
LIMIT 1;

E10
"A comissão de um vendedor é definida a partir de um percentual sobre o total de vendas (quantidade * valor unitário) por ele realizado. O percentual de comissão de cada vendedor está armazenado na coluna perccomissao, tabela tbvendedor. 
Com base em tais informações, calcule a comissão de todos os vendedores, considerando todas as vendas armazenadas na base de dados com status concluído.
As colunas presentes no resultado devem ser vendedor, valor_total_vendas e comissao. O valor de comissão deve ser apresentado em ordem decrescente arredondado na segunda casa decimal."

SELECT
	tbvendedor.nmvdd AS vendedor,
	ROUND(SUM(tbvendas.qtd * tbvendas.vrunt), 2) AS valor_total_vendas,
	ROUND(SUM(tbvendas.qtd * tbvendas.vrunt * tbvendedor.perccomissao)/100, 2) AS comissao
FROM tbvendedor
JOIN tbvendas ON tbvendedor.cdvdd = tbvendas.cdvdd
WHERE tbvendas.status = 'Concluído'
GROUP BY 
	tbvendedor.nmvdd,
	tbvendedor.perccomissao
ORDER BY
	comissao DESC;

E11
"Apresente a query para listar o código e nome cliente com maior gasto na loja. As colunas presentes no resultado devem ser cdcli, nmcli e gasto, esta última representando o somatório das vendas (concluídas) atribuídas ao cliente."

SELECT
    tbvendas.cdcli,
    tbvendas.nmcli,
    ROUND(SUM(tbvendas.qtd * tbvendas.vrunt), 2) AS gasto
FROM tbvendas

WHERE tbvendas.status = 'Concluído'
GROUP BY
    tbvendas.cdcli,
    tbvendas.nmcli
ORDER BY
    gasto DESC
LIMIT 1

E12
"Apresente a query para listar código, nome e data de nascimento dos dependentes do vendedor com menor valor total bruto em vendas (não sendo zero). As colunas presentes no resultado devem ser cddep, nmdep, dtnasc e valor_total_vendas.
Observação: Apenas vendas com status concluído."
 
 SELECT
    tbdependente.cddep,
    tbdependente.nmdep,
    tbdependente.dtnasc,
    subquery_vendedor.valor_total_vendas
FROM
    tbdependente
JOIN (
    SELECT
        tbvendedor.cdvdd,
        ROUND(SUM(tbvendas.qtd * tbvendas.vrunt), 2) AS valor_total_vendas
    FROM
        tbvendedor
    JOIN tbvendas ON tbvendedor.cdvdd = tbvendas.cdvdd
    WHERE
        tbvendas.status = 'Concluído'
    GROUP BY
        tbvendedor.cdvdd
    HAVING
        valor_total_vendas > 0
    ORDER BY
        valor_total_vendas
    LIMIT 1
) AS subquery_vendedor ON tbdependente.cdvdd = subquery_vendedor.cdvdd

E13
"Apresente a query para listar os 10 produtos menos vendidos pelos canais de E-Commerce ou Matriz (Considerar apenas vendas concluídas).  As colunas presentes no resultado devem ser cdpro, nmcanalvendas, nmpro e quantidade_vendas."

SELECT
    tbvendas.cdpro,
    tbvendas.nmcanalvendas,
    tbvendas.nmpro,
    SUM(tbvendas.qtd) AS quantidade_vendas
FROM
    tbvendas
WHERE
    tbvendas.status = 'Concluído'
    AND (tbvendas.nmcanalvendas = 'Ecommerce' OR tbvendas.nmcanalvendas = 'Matriz')
GROUP BY
    tbvendas.cdpro,
    tbvendas.nmcanalvendas,
    tbvendas.nmpro
ORDER BY
    quantidade_vendas
LIMIT 10;

E14
"Apresente a query para listar o gasto médio por estado da federação. As colunas presentes no resultado devem ser estado e gastomedio. Considere apresentar a coluna gastomedio arredondada na segunda casa decimal e ordenado de forma decrescente.
Observação: Apenas vendas com status concluído."

SELECT
    tbvendas.estado,
    ROUND(AVG(tbvendas.qtd*tbvendas.vrunt), 2) AS gastomedio
FROM
    tbvendas
WHERE
    tbvendas.status = 'Concluído'
GROUP BY
    tbvendas.estado
ORDER BY
    gastomedio DESC;

E15
"Apresente a query para listar os códigos das vendas identificadas como deletadas. Apresente o resultado em ordem crescente."

SELECT
    cdven
FROM
    tbvendas
WHERE
    deletado=1
ORDER BY
    cdven ASC;

E16
"Apresente a query para listar a quantidade média vendida de cada produto agrupado por estado da federação. As colunas presentes no resultado devem ser estado e nmprod e quantidade_media. Considere arredondar o valor da coluna quantidade_media na quarta casa decimal. Ordene os resultados pelo estado (1º) e nome do produto (2º).
Obs: Somente vendas concluídas."

SELECT
	estado,
    nmpro,
    ROUND(AVG(tbvendas.qtd), 4) AS quantidade_media
FROM tbvendas
WHERE
    tbvendas.status = 'Concluído'
GROUP BY 
tbvendas.estado, tbvendas.nmpro
ORDER BY
tbvendas.estado,
tbvendas.nmpro
    















